name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
      - uses: taiki-e/install-action@cargo-deny
      - uses: taiki-e/install-action@just
      - uses: taiki-e/install-action@cross
      - uses: taiki-e/install-action@cargo-audit
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Lint
        run: just lint
      - name: Unit tests
        run: just test
      - name: Security audit
        run: cargo audit --color always || true
      - name: Build static release (x86_64-musl)
        run: just build-static
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: terradrift-musl
          path: target/x86_64-unknown-linux-musl/release/terradrift
      - name: Download Trivy HTML template
        run: |
          curl -sSL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl -o trivy-html.tpl
      - name: Run Trivy security scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          ignore-unfixed: true
          format: "template"
          template: "./trivy-html.tpl"
          output: "trivy-report.html"
          input: "target/x86_64-unknown-linux-musl/release/terradrift"
      - name: Upload Trivy report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.html
      - name: Install cargo-tarpaulin
        uses: taiki-e/install-action@v2
        with:
          tool: "cargo-tarpaulin@0.32.7"

      - name: Generate code coverage (Tarpaulin)
        run: cargo tarpaulin --workspace --ignore-tests --out Xml

      - name: Generate SBOM (cyclonedx)
        run: |
          cargo install --locked cargo-cyclonedx --version ^0.5
          # Generate SBOM in CycloneDX XML format. The tool writes the file next to the
          # manifest (./crates/terradrift/sbom.xml). Use --override-filename to simplify
          cargo cyclonedx -f xml --override-filename sbom
          # Move the generated file to workspace root so later steps can find it
          mv $(find . -maxdepth 3 -name sbom.xml | head -n 1) ./sbom.xml
      - name: Sign SBOM with cosign (optional)
        continue-on-error: true
        env:
          COSIGN_KEY: ${{ secrets.COSIGN_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: |
          sha256sum sbom.xml | awk '{print $1}' > sbom.xml.sha256
          cosign sign-blob --key env://COSIGN_KEY sbom.xml --output-signature sbom.xml.sig
      - name: Upload coverage & SBOM artifacts
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            coverage/*.html
            sbom.xml
            sbom.xml.sig
            sbom.xml.sha256 